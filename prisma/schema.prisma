// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id String @id @default(cuid())
  sessionToken String @unique@map("session_token")
  expires DateTime
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  sessionId String   @unique
  members   Member[]
}

model Game {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  name        String
  type        String
  numSubjects Int
  members     Member[] @relation("Members")
  host        Member   @relation("Host", fields: [hostId], references: [id])
  hostId      Int      @unique
  rounds      Round[]
}

model Member {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String
  score     Int
  rank      Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  game      Game     @relation("Members", fields: [gameId], references: [id])
  gameId    Int
  hosting   Game?    @relation("Host")
  leading   Round[]
  guesses   Guess[]
}

model Round {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  category  String
  game      Game      @relation(fields: [roundId], references: [id])
  roundId   Int
  leader    Member    @relation(fields: [leaderId], references: [id])
  leaderId  Int
  subjects  Subject[]
}

model Subject {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  name        String
  score       Int
  artwork     String
  description String
  round       Round    @relation(fields: [roundId], references: [id])
  roundId     Int
  guesses     Guess[]
}

model Guess {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String?
  score     Int
  delta     Int
  subject   Subject  @relation(fields: [subjectId], references: [id])
  subjectId Int
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
}
